name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Run Android Lints
      run: ./gradlew lintRelease

    - name: Run Unit Tests
      run: ./gradlew testReleaseUnitTest

    - name: Build APK
      run:  ./gradlew assembleDebug assembleAndroidTest

    - name: Decode Google Services Config
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
      run: echo "$GOOGLE_SERVICES_JSON" | base64 -d > app/google-services.json

    - name: Run Firebase Test Lab
      uses: FirebaseExtended/firebase-testlab-github-action@v1.4
      with:
        project-id: ${{ secrets.FIREBASE_PROJECT_ID }}
        service-account-key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        debug-apk: app/build/outputs/apk/debug/app-debug.apk
        test-apk: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/reports/lint-results-release.html
          /sdcard/test-results
