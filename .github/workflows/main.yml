name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Run Android Lints
      run: ./gradlew lintRelease

    - name: Run Unit Tests
      run: ./gradlew testReleaseUnitTest

    - name: Build APK
      run:  ./gradlew assembleDebug assembleAndroidTest

    - name: Set up gcloud
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        project_id: ${{ secrets.FIREBASE_PROJECT_ID }}

    - name: Run Instrumentation Tests in Firebase Test Lab
      run: >
        gcloud auth activate-service-account firebase-adminsdk-fbsvc@imagegallery-d0e8e.iam.gserviceaccount.com --key-file=${{ secrets.FIREBASE_SERVICE_ACCOUNT }} --project=${{ secrets.FIREBASE_PROJECT_ID }}
        gcloud --quiet config set project ${{ secrets.FIREBASE_PROJECT_ID }}
        gcloud firebase test android run --app ./app/build/outputs/apk/debug/app-debug.apk --test ./app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          app/build/reports/tests/
          app/build/reports/lint-results-release.html
          /sdcard/test-results
